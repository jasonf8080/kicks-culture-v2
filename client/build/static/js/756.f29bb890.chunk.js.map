{"version":3,"file":"static/js/756.f29bb890.chunk.js","mappings":"6IAEA,MAiDA,E,QAjDgBA,GAAAA,IAAU,srB,+HCU1B,MA+EA,EA/EiB,KACf,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEX,cAACC,EAAa,aAAEC,EAAY,QAAEC,EAAO,YAAEC,EAAW,UAAEC,EAAS,KAAEC,EAAI,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,IAAYC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,QAIrIC,EAAAA,EAAAA,YAAU,KACLT,GACDU,YAAW,KACTjB,GAASkB,EAAAA,EAAAA,MAAmB,GAC3B,IACL,GAEC,CAACX,KAEJS,EAAAA,EAAAA,YAAU,MACRG,EAAAA,EAAAA,KAAiB,GAChB,IAoCH,OACE,SAAC,IAAO,WACR,qBAASC,UAAU,iDAAgD,WACjE,eAAIA,UAAU,mBAAkB,SAAEhB,EAAgB,WAAa,UAE9DG,IAAe,cAAGa,UAAWZ,EAAU,SAAED,IAEzCH,GAAgB,SAAC,KAAW,KAAK,SAAC,KAAK,IAEvCA,GACD,sDAA4B,mBAAQgB,UAAU,kBAAkBC,QAAS,IAAMrB,GAASsB,EAAAA,EAAAA,IAAkB,UAAU,uBAEpH,wDAA8B,mBAAQF,UAAU,kBAAkBC,QAAS,IAAMrB,GAASsB,EAAAA,EAAAA,IAAkB,aAAa,0BAGzH,mBAAQF,UAAU,YAAYG,SAAUjB,EAASe,QAASjB,EAhDvCoB,UACrB,IACG,MAAMC,QAAqBzB,GAAS0B,EAAAA,EAAAA,IAAa,CAACjB,OAAMC,WAAUC,QAAOC,cACrEc,EAAAA,GAAAA,UAAAA,MAA6BD,IAE9BR,YAAW,KACTf,EAAS,IAAI,GACZ,IAKT,CAFE,MAAOyB,GACPC,QAAQC,IAAIF,EACd,GAKkBH,UAClB,IACG,MAAMC,QAAqBzB,GAAS8B,EAAAA,EAAAA,IAAU,CAACnB,QAAOC,cAClDkB,EAAAA,GAAAA,UAAAA,MAA0BL,IAE5BR,YAAW,KACRf,EAAS,GAAD,OAAIG,GAAe,GAC3B,IAKR,CAFE,MAAOsB,GACPC,QAAQC,IAAIF,EACd,GAmByG,SACpGrB,GAAU,SAAC,KAAM,CAACyB,UAAW,kBAAqB3B,EAAgB,WAAa,cAI1E,C","sources":["assets/css-wrappers/Register.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n/* Register / Login */\n.register-section {\n  text-align: center;\n}\n\n.register-section .error-message, .success-message{\n  margin-bottom: 20px;\n  padding: 10px 20px;\n}\n\n.register-form {\n  display: flex;\n  flex-direction: column;\n}\n\n\n.register-toggle {\n  border: none;\n  background-color: white;\n}\n\n@media(max-width: 768px){\n  .xsmall-container{\n    max-width: 70%;\n  }\n}\n\n@media(max-width: 500px){\n  .xsmall-container, .btn-black{\n    min-width: 80%;\n    max-width: 80%;\n  } \n\n  .btn-black{\n    min-width: 100%;\n  }\n\n  .success-message, .error-message{\n    font-size: 13px;\n  }\n\n  .form-input{\n    margin-bottom: 14px;\n  }\n}\n\n`;\n\nexport default Wrapper","import React, { useEffect } from 'react'\nimport Wrapper from '../assets/css-wrappers/Register';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Registering, Login, Loader } from '../components'\nimport { registerUser, loginUser, handleRegistering } from '../features/authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { clearAuthMessage } from '../features/authSlice';\nimport { handleLinkClick } from '../utils/helpers';\n\n\n\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const {isRegistering, prevLocation, loading, authMessage, authClass, name, lastName, email, password} = useSelector((store) => store.auth);\n  \n\n\n  useEffect(() => {\n    if(authMessage){\n      setTimeout(() => {\n        dispatch(clearAuthMessage())\n      }, 4000)\n    }\n\n  }, [authMessage])\n\n  useEffect(() => {\n    handleLinkClick();\n  }, [])\n\n\n  const handleRegister = async () => {\n    try {\n       const resultAction = await dispatch(registerUser({name, lastName, email, password}));\n       if (registerUser.fulfilled.match(resultAction)) {\n\n          setTimeout(() => {\n            navigate(`/`);\n          }, 3000)\n          \n      }\n    } catch (error) {\n      console.log(error)\n    }\n  };\n\n\n\n  const handleLogin = async () => {\n    try {\n       const resultAction = await dispatch(loginUser({email, password}));\n       if (loginUser.fulfilled.match(resultAction)) {\n\n         setTimeout(() => {\n            navigate(`${prevLocation}`);\n         }, 3000)\n\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  };\n\n\n  return (\n    <Wrapper>\n    <section className=\"main-section xsmall-container register-section\">\n      <h1 className=\"text-2xl heading\">{isRegistering ? 'Register' : 'Login'}</h1>\n\n      {authMessage && <p className={authClass}>{authMessage}</p>}\n\n      {isRegistering ? <Registering/> : <Login/>}\n\n      {isRegistering ? \n      <p>Already have an account? <button className='register-toggle' onClick={() => dispatch(handleRegistering('login'))}>Login</button></p>\n        : \n      <p>Don't have an account yet? <button className='register-toggle' onClick={() => dispatch(handleRegistering('register'))}>Register</button></p>\n      }\n      \n      <button className='btn-black' disabled={loading} onClick={isRegistering ? handleRegister : handleLogin}>\n        {loading ? <Loader classProp={'button-loader'}/> : isRegistering ? 'Register' : 'Login'}\n      </button>\n    \n    </section>\n    </Wrapper>\n  )\n}\n\nexport default Register\n\n"],"names":["styled","dispatch","useDispatch","navigate","useNavigate","isRegistering","prevLocation","loading","authMessage","authClass","name","lastName","email","password","useSelector","store","auth","useEffect","setTimeout","clearAuthMessage","handleLinkClick","className","onClick","handleRegistering","disabled","async","resultAction","registerUser","error","console","log","loginUser","classProp"],"sourceRoot":""}